# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо
# только числами. Класс-исключение должен контролировать типы данных элементов списка.
#
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
# работу скрипта, введя, например, команду «stop». При этом скрипт завершается,
# сформированный список с числами выводится на экран.
#
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
# Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
# Вносить его в список, только если введено число. Класс-исключение должен не позволить пользователю
# ввести текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.


# я конечно понимаю что тяжко придумывать тестовое задание, но вообще не вижу как зачем тут делать через исключение
# кидать исключения хорошо в какой-то сложной логики
# Возможно, как раз, тут был бы хороший пример и на чтение чужого кода и добавления исключения как раз в чужой код

lInp = []

curentInpur = None
stopWord = "stop".lower()

while str(curentInpur).lower() != stopWord:
    curentInpur = input(f"Введите число для добавления в список или {stopWord} для прекращения ввода :")

    if curentInpur.lower() == stopWord:
        break

    try:
        curentInpur = int(curentInpur)
    except:
        print(f"Надо ввести целое число или {stopWord} для прекращения ввода в список")
    else:
        lInp.append(curentInpur)

print(f"Вот ваш список чисел: {lInp}")

